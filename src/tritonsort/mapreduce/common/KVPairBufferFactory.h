#ifndef MAPRED_KV_PAIR_BUFFER_FACTORY_H
#define MAPRED_KV_PAIR_BUFFER_FACTORY_H

#include "buffers/KVPairBuffer.h"
#include "common/BufferFactory.h"

/**
   A factory used to construct KVPairBuffers for resource pools
 */
class KVPairBufferFactory : public BufferFactory<KVPairBuffer> {
public:
  /// Constructor
  /**
     \param parentWorker the worker that is using this factory to allocate
     buffers

     \param memoryAllocator a memory allocator that will be used to create the
     underlying memory regions for buffers instantiated by this factory

     \param defaultSize the default size of a KVPairBuffer generated by this
     factory, in bytes

     \param alignmentMultiple memory allocated to this KVPairBuffer will be
     aligned on multiples of this number
   */
  KVPairBufferFactory(
    BaseWorker& parentWorker, MemoryAllocatorInterface& memoryAllocator,
    uint64_t defaultSize, uint64_t alignmentMultiple = 0);

  /**
     Create a new KVPairBuffer with size and jobID determined by metadata. Also
     set peerID as the buffer's node field.

     \param metadata mapreduce-specific network metadata

     \param peerID the ID of the peer that sent this buffer

     \return a new KVPairBuffer sourced from the network with appropriate fields
     set
   */
  KVPairBuffer* newInstanceFromNetwork(uint8_t* metadata, uint64_t peerID);

  static uint64_t networkMetadataSize() {
    return sizeof(KVPairBuffer::NetworkMetadata);
  }

protected:
  KVPairBuffer* createNewBuffer(
    MemoryAllocatorInterface& memoryAllocator, uint8_t* memoryRegion,
    uint64_t capacity, uint64_t alignmentMultiple);

};

#endif // MAPRED_KV_PAIR_BUFFER_FACTORY_H
